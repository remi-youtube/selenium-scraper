name: Codex Auto-Fix on Failure

on:
  workflow_run:
    # Trigger this job after any run of the primary CI workflow completes
    workflows: ["Run Scrapers"]
    types: [completed]

permissions:
  contents: write
  pull-requests: write

jobs:
  auto-fix:
    # Only run when the referenced workflow concluded with a failure
    if: ${{ github.event.workflow_run.conclusion == 'failure' }}
    runs-on: ubuntu-latest
    env:
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      FAILED_WORKFLOW_NAME: ${{ github.event.workflow_run.name }}
      FAILED_RUN_URL: ${{ github.event.workflow_run.html_url }}
      FAILED_HEAD_BRANCH: ${{ github.event.workflow_run.head_branch }}
      FAILED_HEAD_SHA: ${{ github.event.workflow_run.head_sha }}
    steps:
      - name: Check OpenAI API Key Set
        run: |
          if [ -z "$OPENAI_API_KEY" ]; then
            echo "OPENAI_API_KEY secret is not set. Skipping auto-fix." >&2
            exit 1
          fi
      - name: Checkout Failing Ref
        uses: actions/checkout@v4
        with:
          ref: ${{ env.FAILED_HEAD_SHA }}
          fetch-depth: 0
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Run Codex
        uses: openai/codex-action@main
        id: codex
        with:
          openai-api-key: ${{ secrets.OPENAI_API_KEY }}
          prompt: >-
            You are working in a python repo with Selenium scraper files and GitHub Actions. Read the repository,
            run the level*.py files, fix the failing CSS (if any). Only identify the minimal change needed to make
            all tests pass, implement only that change, and stop. Do not refactor unrelated code or files.
            Keep changes small and surgical.
            Failing scrapers will print the HTML of the page they are scraping to help you identify the correct selectors.
          codex-args: '["--config","sandbox_mode=\"workspace-write\""]'

      - name: Create pull request with fixes
        if: success()
        uses: peter-evans/create-pull-request@v6
        with:
          commit-message: "fix(ci): auto-fix failing tests via Codex"
          branch: codex/auto-fix-${{ github.run_number }}-${{ github.run_attempt }}
          base: ${{ env.FAILED_HEAD_BRANCH }}
          title: "Auto-heal scraper failure (Run ${{ github.run_number }})"
          body: |
            ðŸš¨ The scrapers broke but Codex stepped in.

            This pull request was automatically opened after the **${{ env.FAILED_WORKFLOW_NAME }}** workflow failed.
            Codex analyzed the error logs, patched the selectors, and re-ran the tests until everything passed.

            ðŸ”— Failed run: ${{ env.FAILED_RUN_URL }}
            ðŸŒ± Branch: `${{ env.FAILED_HEAD_BRANCH }}`

            The goal here isnâ€™t a full refactor â€” just a small, surgical fix to get the build green again.
            Basically, the scraper healed itself. ðŸ˜‰

