name: Codex Auto-Fix on Failure

on:
  workflow_run:
    # Trigger this job after any run of the primary CI workflow completes
    workflows: ["Run Scrapers"]
    types: [completed]

permissions:
  contents: write
  pull-requests: write
  actions: read

jobs:
  auto-fix:
    # Only run when the referenced workflow concluded with a failure
    if: ${{ github.event.workflow_run.conclusion == 'failure' }}
    runs-on: ubuntu-latest
    env:
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      FAILED_WORKFLOW_NAME: ${{ github.event.workflow_run.name }}
      FAILED_RUN_URL: ${{ github.event.workflow_run.html_url }}
      FAILED_HEAD_BRANCH: ${{ github.event.workflow_run.head_branch }}
      FAILED_HEAD_SHA: ${{ github.event.workflow_run.head_sha }}
    steps:
      - name: Check OpenAI API Key Set
        run: |
          if [ -z "$OPENAI_API_KEY" ]; then
            echo "OPENAI_API_KEY secret is not set. Skipping auto-fix." >&2
            exit 1
          fi
      - name: Checkout Failing Ref
        uses: actions/checkout@v4
        with:
          ref: ${{ env.FAILED_HEAD_SHA }}
          fetch-depth: 0
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Download artifacts from failed run
        uses: dawidd6/action-download-artifact@v6
        with:
          run_id: ${{ github.event.workflow_run.id }}
          repo: ${{ github.repository }}
          path: ci_artifacts
      - name: Run Codex
        uses: openai/codex-action@main
        id: codex
        with:
          openai-api-key: ${{ secrets.OPENAI_API_KEY }}
          prompt: >-
            You are editing a Python Selenium scraper repo.
            Do not install packages. Do not launch browsers. Do not run code.
            Use only the files in this workspace and the debug inputs under ./ci_artifacts.
            Goal: patch the minimal CSS/XPath selectors in level*.py to fix the failure indicated by:
            - ./ci_artifacts/**/level*_*.html (raw page HTML)
            - ./ci_artifacts/**/level*_*.txt (traceback)

            Acceptance criteria:
            - The updated selectors in level*.py would match at least one node in the provided HTML files.
            - Keep changes surgical. No refactors. No file renames. No logic changes beyond selector strings and By.* usage.
            - If the page being scraped is no longer available (40X or 50X), add a comment to the top of the file indicating that and explain why.
          codex-args: '["--config","sandbox_mode=\"workspace-write\""]'

      - name: Create pull request with fixes
        if: success()
        uses: peter-evans/create-pull-request@v6
        with:
          commit-message: "fix(ci): auto-fix failing tests via Codex"
          branch: codex/auto-fix-${{ github.run_number }}-${{ github.run_attempt }}
          base: ${{ env.FAILED_HEAD_BRANCH }}
          title: "Auto-heal scraper failure (Run ${{ github.run_number }})"
          body: |
            ðŸš¨ The scrapers broke but Codex stepped in.

            This pull request was automatically opened after the **${{ env.FAILED_WORKFLOW_NAME }}** workflow failed.
            Codex analyzed the error logs, patched the selectors, and re-ran the tests until everything passed.

            ðŸ”— Failed run: ${{ env.FAILED_RUN_URL }}
            ðŸŒ± Branch: `${{ env.FAILED_HEAD_BRANCH }}`

            The goal here isnâ€™t a full refactor â€” just a small, surgical fix to get the build green again.
            Basically, the scraper healed itself. ðŸ˜‰

